# Equipment Information
Same with the ships API, this sections contains all the functions and results that developers should use for fetching Equipment.

## Return Value
> The body when fetching the result returns:

```json
{
  "wikiUrl": "String",
  "category": "String",
  "names": {
    "en": "String",
    "cn": "String",
    "jp": "String",
    "kr": "String"
  },
  "type": { "focus": "String", "name": "String" },

  "nationality": "String",
  "image": "String",
  "fits": {
    "destroyer": "String",
    "lightCruiser": "String",
    "heavyCruiser": "String",
    "monitor": "String",
    "largeCruiser": "String",
    "battleship": "String",
    "battlecruiser": "String",
    "aviationBattleship": "String",
    "aircraftCarrier": "String",
    "lightCarrier": "String",
    "repairShip": "String",
    "submarine": "String",
    "submarineCarrier": "String"
  },
  "misc": {
    "obtainedFrom": "String",
    "notes": "String",
    "animation": "String"
  },
  "tiers": {
    "T0": { "tier": "String", "rarity": "String", "stars": [Object], "stats": [Object] }
  }
}
```
## Equipment Query By Name
The table below allows you to configure the type of language as pointed of reference in name detection.

<aside class="notice">Please note that only multilingual support auto queries by what language it was assigned to.</aside>

```javascript
client.equipment.get(`String`); // QUERY EVERYTHING
client.equipment.get(`String(ID)`); // GET Equipment BY ID
```
```python

```
```csharp

```
